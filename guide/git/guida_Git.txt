## Git:
#installa Git: https://git-scm.com/downloads
#verifica che premendo tasto dx sullo schermo compaia la voce "Git bash" (cerca anche in "altre opzioni")

#tutti i comandi che iniziano con $ puoi eseguirli nella Power Shell oppure nel terminale che offre Git (Git bash)

#crea un profilo GitHub: https://github.com
_____________________________________________________________________
NON obbligatorio:
{
#crea chiave SSH:
$ ssh-keygen -t ed25519 -C "your_email@example.com"
aggiungi password ...

#aggiungi la chiave al tuo profilo:
$ ssh-add ~/.ssh/id_ed25519

#aggiungi la chiave al profilo GitHub:
$ clip < ~/.ssh/id_ed25519.pub   #copia la chiave
#apri GitHub, sezione "settings -> SSH & GPG keys -> new SSH key"
#incolla la chiave nella sezione "key"; in "title" puoi mettere "personal laptop" e lasciare "Authentication key"
}
_____________________________________________________________________
## crea cartella condivisa:
#apri GitHub, sezione "repository -> new"; licenza consigliata per studenti : MIT License
#copia la chiave SSH:
#seleziona la repository, vai su "code -> local -> SSH" e copia la chiave (se non hai una chiave utilizza il codice https)
#crea una copia locale della repository sul tuo pc:
$ git clone [chiave SSH]   (o https)
#ora puoi creare in questa cartella dei nuovi file (come faresti normalmente)
N.B. tutto ciò che fai in questa cartella è in locale, quindi NON risulterà nulla nella repository GitHub

#aggiungi/modifica/rimuovi file alla directory GitHub:
#per aggiungere le modifiche a GitHub bisogna prima aggiungerle a Git, e poi "pusharle" nella repository:
#aggiungi i file a Git:
$ git add [nome file completo con estensione]   #va fatto per ogni file; puoi anche usare l'opzione -a (all) per aggiungerli tutti (quindi "$ git add -a" o anche "$ git add .")
$ git commit -m "commento"   #il commento può anche essere semplicemente il numero della versione
#aggiorna la repository GitHub:
$ git push   #va eseguito nella directory collegata a GitHub

#se qualcun altro ha modificato la repository GitHub condivisa:
#aggiorna la copia locale della repository:
$ git pull   #va eseguito nella directory collegata a GitHub
_____________________________________________________________________
Voglio prima creare la cartella in locale e poi aggiungerla a GitHub:
{
## crea cartella per Git (personale, per usufruire dei servizi* di Git):
crea una cartella (nella directory che vuoi):
$ mkdir MyFolder   #puoi anche crearla banalmente con il classico tasto dx -> nuovo -> cartella
#collega la cartella a Git:
$ git init   #va eseguito nella directory che si intende aggiungere a GitHub
#comparirà una cartella .git (se non compare vai su "visualizza -> mostra -> elementi nascosti")
#crea i file che vuoi come in una cartella normale
$ git add [nome file completo con estensione]   #come sopra
$ git commit -m "commento"   #come sopra

## aggiungi a GitHub:  (per aggiungere a GitHub una cartella esistente in locale)

git remote add origin git@github.com:G48R1/Progetto_PCS.git    # nome_Git_Hub/nome_progetto.git
git branch -M main   //crea il branch master
git push -u origin main   //carica il branch generato
}
_____________________________________________________________________
## BRANCHING & MERGING
#lavoro in parallelo: creare diramazioni del tronco principale (master) e poi riconnetterle al master:

$ git branch  // restituisce la lista dei branches
#creare un branch:
$ git branch nome_branch   //crea un branch
#spostarsi da un branch a un altro:
$ git checkout nome_branch   //per tornare sul principale si usa git checkout master

$ git config --global user.email "email@"   //configurare l'autore (omettere --global se si vuole impostare l'autore solo per quella repository)

$ git push origin nome_branch   //update della repository GitHub   # da fare nel branch che si vuole diramare
# oppure direttamente merging: (se non si vuole creare il branch anche su GitHub ma solo in locale)
$ git checkout master
$ git merge nome_branch
$ git push   //per aggiornare la repository GitHub
_____________________________________________________________________
## PROBLEMI & ERRORI

$ ssh -T git@github.com    //impossibilità di effettuare una push (probabile errore di autenticazione)

DOCUMENTAZIONE
https://help.github.com/articles/testing-your-ssh-connection/
https://help.github.com/articles/connecting-to-github-with-ssh/


*La principale funzionalità di Git è la possibilità di accedere alle versioni precedenti della repository, poiché Git salva tutto lo storico delle modifiche
